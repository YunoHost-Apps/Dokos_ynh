#!/bin/bash

# This is the tutorial version of the app.
# It contains extra commands to explain what should be done in case you want to adjust some part of the script.
# Once you are done, you may remove them.

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

# Keep this path for calling _common.sh inside the execution's context of backup and restore scripts
source ../settings/scripts/_common.sh
source /usr/share/yunohost/helpers
source ../settings/scripts/_ynh_mysql_connect_as.sh

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing wkhtmltopdf patched qt package..." --weight=1

# Install wkhtmltopdf patched qt package
install_wkhtmltopdf_patched_qt_package

ynh_script_progression --message="Installing NodeJS..." --weight=10

# Install Nodejs
ynh_exec_warn_less ynh_install_nodejs --nodejs_version=$nodejs_version

#=================================================
# RESTORE THE MYSQL DATABASE
#=================================================
ynh_script_progression --message="Restoring the MySQL database..." --weight=9

ynh_mysql_connect_as --user=$db_name --password=$db_pwd --database=$db_name --default_character_set="utf8mb4" < ./db.sql

#=================================================
# RESTORE THE APP MAIN DIR
#=================================================
ynh_script_progression --message="Restoring the app main directory..." --weight=1

ynh_restore_file --origin_path="$install_dir"

# $install_dir will automatically be initialized with some decent
# permission by default ... however, you may need to recursively reapply
# ownership to all files such as after the ynh_setup_source step
chown -R $app: "$install_dir"

#=================================================
# RESTORE THE DATA DIRECTORY
#=================================================
ynh_script_progression --message="Restoring the data directory..." --weight=1

ynh_restore_file --origin_path="$data_dir" --not_mandatory

# (Same as for install dir)
chown -R $app: "$data_dir"

#=================================================
# RESTORE THE NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Restoring the NGINX web server configuration..." --weight=1

ynh_restore_file --origin_path="/etc/nginx/conf.d/$domain.d/$app.conf"

#=================================================
# RESTORE SYSTEMD CONFIGURATIONS
#=================================================
ynh_script_progression --message="Enable systemd services" --weight=2

ynh_restore_file --origin_path="/etc/systemd/system/$app-redis.target"
ynh_restore_file --origin_path="/etc/systemd/system/$app-web.target"
ynh_restore_file --origin_path="/etc/systemd/system/$app-workers.target"
ynh_restore_file --origin_path="/etc/systemd/system/$app.target"
ynh_restore_file --origin_path="/etc/systemd/system/$app-redis-cache.service"
ynh_restore_file --origin_path="/etc/systemd/system/$app-redis-queue.service"
ynh_restore_file --origin_path="/etc/systemd/system/$app-frappe-default-worker.service"
ynh_restore_file --origin_path="/etc/systemd/system/$app-frappe-long-worker.service"
ynh_restore_file --origin_path="/etc/systemd/system/$app-frappe-short-worker.service"
ynh_restore_file --origin_path="/etc/systemd/system/$app-frappe-schedule.service"
ynh_restore_file --origin_path="/etc/systemd/system/$app-frappe-web.service"
ynh_restore_file --origin_path="/etc/systemd/system/$app-node-socketio.service"

systemctl daemon-reload

# Enable target systemd files
systemctl enable "$app-redis.target" --quiet
systemctl enable "$app-workers.target" --quiet
systemctl enable "$app-web.target" --quiet
systemctl enable "$app.target" --quiet

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..." --weight=1

yunohost service add "$app-redis-cache" --description="$app redis cache service"
yunohost service add "$app-redis-queue" --description="$app redis queue service"
yunohost service add "$app-frappe-default-worker" --description="$app default worker service"
yunohost service add "$app-frappe-long-worker" --description="$app long worker service"
yunohost service add "$app-frappe-short-worker" --description="$app short worker service"
yunohost service add "$app-frappe-schedule" --description="$app schedule service"
yunohost service add "$app-frappe-web" --description="$app web service"
yunohost service add "$app-node-socketio" --description="$app node socketio service"

#=================================================
# START SYSTEMD SERVICES
#=================================================
ynh_script_progression --message="Starting systemd services..." --weight=1

# For some reason --line_match makes starting of services very long during restore (compare to install script). Needs to be investigated later.

ynh_systemd_action --service_name=$app-redis-cache --action="start" --log_path="$install_dir/dokos-bench-folder/logs/redis-cache.log" # --line_match="Ready to accept connections"
ynh_systemd_action --service_name=$app-redis-queue --action="start" --log_path="$install_dir/dokos-bench-folder/logs/redis-queue.log" # --line_match="Ready to accept connections"
systemctl start "$app-redis.target" --quiet

ynh_systemd_action --service_name=$app-frappe-default-worker --action="start" --log_path="$install_dir/dokos-bench-folder/logs/default-worker.log" # --line_match="Listening on var-www-$app-dokos-bench-folder:default"
ynh_systemd_action --service_name=$app-frappe-long-worker --action="start" --log_path="$install_dir/dokos-bench-folder/logs/long-worker.log" # --line_match="Listening on var-www-$app-dokos-bench-folder:long"
ynh_systemd_action --service_name=$app-frappe-short-worker --action="start" --log_path="$install_dir/dokos-bench-folder/logs/short-worker.log" # --line_match="Listening on var-www-$app-dokos-bench-folder:short"
ynh_systemd_action --service_name=$app-frappe-schedule --action="start" --log_path="systemd" --line_match="Started dokos-frappe-schedule.service - "
systemctl start "$app-workers.target" --quiet

ynh_systemd_action --service_name=$app-frappe-web --action="start" --log_path="systemd" --line_match="Started dokos-frappe-web.service - "
ynh_systemd_action --service_name=$app-node-socketio --action="start" --log_path="$install_dir/dokos-bench-folder/logs/node-socketio.log" # --line_match="Realtime service listening on"
systemctl start "$app-web.target" --quiet

systemctl start "$app.target" --quiet

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..." --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# SCHEDULER
#=================================================

# Enable and resume the scheduler for the site
ynh_script_progression --message="Enabling Scheduler..." --weight=1

pushd $install_dir/dokos-bench-folder
    ynh_use_nodejs
    ynh_exec_as $app env PATH=$install_dir/bin:$PATH bench --site $domain scheduler enable && \
    ynh_exec_as $app env PATH=$install_dir/bin:$PATH bench --site $domain scheduler resume
popd

# Now to make sure the environment is fully setup
chmod 755 "$install_dir"
chown $app: -R $install_dir

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..." --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# RESTORE THE LOGROTATE CONFIGURATION
#=================================================
ynh_script_progression --message="Restoring the logrotate configuration..." --weight=1

ynh_restore_file --origin_path="/etc/logrotate.d/$app"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Restoration completed for $app" --last