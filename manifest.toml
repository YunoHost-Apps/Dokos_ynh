packaging_format = 2

id = "dokos"
name = "Dokos"

description.en = "A 100% open-source management software that is based on ERPNext"
description.fr = "Une plateforme de gestion d'entreprise complète, 100% open-source, basée sur ERPNext"

version = "4.33.0~ynh2"

maintainers = ["Thatoo"]

[upstream]
license = "GPL-3.0-or-later"
website = "https://dokos.io/"

admindoc = "https://doc.dokos.io/dodock/"
userdoc = "https://doc.dokos.io/dokos"
code = "https://gitlab.com/dokos/dokos"

[integration]
yunohost = '>= 12.0'
# List of supported archs using the dpkg --print-architecture nomenclature (amd64/i386/armhf/arm64), for example: ["amd64", "i386']
architectures = ['amd64', 'arm64',]
multi_instance = true
ldap = false
sso = false
disk = "4G"
ram.build = "250M"
ram.runtime = "512M"

[install]

    [install.domain]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "domain"
    help.en = "Choose a domain that is not one of your yunohost's subdomain : not dokos.yunohost.domain.tld."
    help.fr = "Choisissez un domain qui n'est pas un sous domaine de votre yunohost : pas dokos.yunohost.domain.tld."

    [install.init_main_permission]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    # This won't be saved as setting and will instead be used to initialize the SSOwat permission
    type = "group"
    default = "visitors"

    [install.language]
    ask.en = "Choose the application language"
    ask.fr = "Choisissez la langue de l'application"
    type = "select"
    choices = ["en_EN", "fr_FR"]
    default = "fr_FR"
    
    [install.password]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    # Note that user-provided passwords questions are not automatically saved as setting
    help.en = "Choose a password for the administrator user, who will then be able to manage your Dokos."
    help.fr = "Choisissez le mot de passe de l'utilisateur administrator qui vous permettra ensuite de gérer votre Dokos."
    type = "password"

[resources]
    # See the packaging documentation for the full set
    # of explanation regarding the behavior and properties for each of those
    # https://yunohost.org/packaging_apps_resources

    [resources.sources]

        [resources.sources.frappe]
        # This will pre-fetch the asset which can then be deployed during the install/upgrade scripts with :
        #    ynh_setup_source --dest_dir="$install_dir"
        # You can also define other assets than "main" and add --source_id="foobar" in the previous command
        url = "https://gitlab.com/dokos/dokos/-/archive/v4.54.0/dokos-v4.54.0.tar.bz2"
        sha256 = "6de7095da46dea1fa316d3b1e9fccc8e589c1fc692b9e31864c0150eaa28b2ad"
        prefetch = true

        autoupdate.strategy = "latest_gitlab_release"

        [resources.sources.erpnext]
        url = "https://gitlab.com/dokos/dokos/-/archive/v4.54.0/dokos-v4.54.0.tar.bz2"
        sha256 = "6de7095da46dea1fa316d3b1e9fccc8e589c1fc692b9e31864c0150eaa28b2ad"
        prefetch = true
        autoupdate.strategy = "latest_gitlab_release"

        [resources.sources.payments]
        url = "https://gitlab.com/dokos/payments/-/archive/v2.22.0/payments-v2.22.0.tar.bz2"
        sha256 = "63aada5b68dc847dde26f114e543a24a1f2a40dd471fee261a34693d5618bf81"
        prefetch = true
        autoupdate.strategy = "latest_gitlab_release"
        autoupdate.upstream = "https://gitlab.com/dokos/payments"

        [resources.sources.hrms]
        url = "https://gitlab.com/dokos/hrms/-/archive/v2.59.0/hrms-v2.59.0.tar.bz2"
        sha256 = "310f63b4c575d2f007b8df911c63951a4555a752f54f952cc7788f32ba78d199"
        prefetch = true
        autoupdate.strategy = "latest_gitlab_release"
        autoupdate.upstream = "https://gitlab.com/dokos/hrms"

        [resources.sources.wkhtmltopdf_patched_qt]
        amd64.url = "https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6.1-3/wkhtmltox_0.12.6.1-3.bookworm_amd64.deb"
        amd64.sha256 = "98ba0d157b50d36f23bd0dedf4c0aa28c7b0c50fcdcdc54aa5b6bbba81a3941d"
        arm64.url = "https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6.1-3/wkhtmltox_0.12.6.1-3.bookworm_arm64.deb"
        arm64.sha256 = "b6606157b27c13e044d0abbe670301f88de4e1782afca4f9c06a5817f3e03a9c"
        
        #autoupdate.upstream = "https://github.com/wkhtmltopdf/packaging"
        #autoupdate.strategy = "latest_github_release"
        #autoupdate.asset.amd64 = ".*\\.bookworm_amd64.deb"
        #autoupdate.asset.arm64 = ".*\\.bookworm_arm64.deb"

        format = "whatever"
        extract = false
        rename = "wkhtmltopdf_patched_qt.deb"
        prefetch = false

    [resources.system_user]
    # This will provision/deprovision a unix system user
    allow_email = true

    [resources.install_dir]
    # This will create/remove the install dir as /var/www/$app
    # and store the corresponding setting $install_dir

    [resources.data_dir]
    # This will create/remove the data dir as /home/yunohost.app/$app
    # and store the corresponding setting $data_dir

    [resources.permissions]
    # This will configure SSOwat permission for $domain/$path/
    # The initial allowed group of user is configured via the init_main_permission question (public=visitors, private=all_users)
    main.url = "/"

    [resources.ports]
    # This will pick a random port for reverse-proxying and store it as the $port setting
    redis_cache.default = 13000
    redis_queue.default = 11000
    socketio.default = 9000
    webserver.default = 8000

    [resources.apt]
    # This will automatically install/uninstall the following apt packages
    # and implicitly define the $phpversion setting as 8.0 (if phpX.Y-foobar dependencies are listed)
    packages = ["python3", "python3-pip", "python3-venv", "python3-dev", "python3-setuptools", "python3-distutils", "software-properties-common", "git", "curl", "ca-certificates", "redis-server", "xvfb", "libfontconfig", "fontconfig", "xfonts-base", "xfonts-75dpi", "libxrender1", "mariadb-server", "mariadb-client"]

            [resources.apt.extras.yarn]
            repo = "deb https://dl.yarnpkg.com/debian/ stable main"
            key = "https://dl.yarnpkg.com/debian/pubkey.gpg"
            packages = ["yarn"]

    [resources.database]
    # This will automatically provision/deprovison a database and store the corresponding credentials in settings $db_user, $db_name, $db_pwd
    type = "mysql"
